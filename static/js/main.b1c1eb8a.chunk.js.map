{"version":3,"sources":["constants/constants.js","components/Overview.jsx","containers/OverviewContainer.js","components/OrderList.jsx","actions/deleteItem.js","containers/OrderListContainer.js","components/ToggleTable.jsx","actions/toggleTable.js","actions/incrementMoney.js","containers/ToggleTableContainer.js","components/Details.jsx","containers/DetailsContainer.js","components/TableButton.jsx","actions/selectTable.js","containers/TableButtonContainer.js","components/Layout.jsx","components/OrderButton.jsx","actions/addItem.js","containers/OrderButtonContainer.js","components/Menu.jsx","components/Body.jsx","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["module","exports","SELECT_TABLE","TOGGLE_TABLE","INCREMENT_MONEY_EARNED","ADD_TABLE_ITEM","DELETE_TABLE_ITEM","Overview","props","numTables","i","tableStatusData","length","style","textAlign","padding","backgroundColor","color","className","moneyEarned","OverviewContainer","connect","state","OrderList","selectedTable","console","log","marginLeft","display","flexDirection","items","map","onClick","onDelete","name","price","deleteItem","tableId","id","type","OrderListContainer","tableData","dispatch","ToggleTable","boxShadow","disabled","onToggle","tableStatus","toggleTable","incrementMoney","amount","ToggleTableContainer","total","Details","width","height","paddingTop","DetailsContainer","TableButton","margin","border","marginTop","outline","onSelect","selectTable","TableButtonContainer","Layout","alignContent","justifyContent","flexWrap","OrderButton","onAdd","addItem","item","OrderButtonContainer","Menu","Body","flex","class","App","Boolean","window","location","hostname","match","initialTableData","push","initialTableStatusData","Array","fill","reducer","combineReducers","action","stateCopy","slice","splice","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GAOAA,EAAOC,QAAU,CAChBC,aARoB,eASpBC,aARoB,eASpBC,uBAR8B,yBAS9BC,eARsB,iBAStBC,kBARyB,sB,6HCkBXC,EApBE,SAACC,GAQf,IAPH,IAMKC,EAAY,EACLC,EAAI,EAAGA,EAAIF,EAAMG,gBAAgBC,OAAQF,IAChDD,GAAaD,EAAMG,gBAAgBD,GAEvC,OACC,yBAAKG,MAXK,CACXC,UAAW,SACXC,QAAS,OACTC,gBAAiB,OACjBC,MAAO,QAOaC,UAAU,iDAC5B,uBAAGA,UAAU,aAAb,iBACA,uBAAGA,UAAU,kBAAb,kBAA8CT,EAA9C,SACA,uBAAGS,UAAU,kBAAb,iBAA6CV,EAAMW,eCLvCC,EAFWC,aAPF,SAAAC,GACtB,MAAO,CACLH,YAAaG,EAAMH,YACnBR,gBAAiBW,EAAMX,mBAIwB,KAAzBU,CAA+Bd,GCmB1CgB,EA3BG,SAAAf,GAQhB,OAA4B,OAAxBA,EAAMgB,cAA+B,MACzCC,QAAQC,IAAIlB,GAEV,yBAAKK,MAVK,CACVC,UAAW,OACXa,WAAY,GACZC,QAAS,OACTC,cAAe,WAOZrB,EAAMsB,MAAMC,KAAI,SAACD,EAAOpB,GACvB,OACE,6BACE,4BAAQQ,UAAU,eAAec,QAAS,kBAAMxB,EAAMyB,SAASzB,EAAMgB,cAAed,KAApF,KADF,QAIUoB,EAAMI,KAJhB,OAI0BJ,EAAMK,MAC9B,oC,OCXGC,EARI,SAACC,EAASC,GAC5B,MAAM,CACLC,KAAMjC,oBACN+B,QAASA,EACTC,GAAIA,ICkBSE,EAJYnB,aAhBH,SAAAC,GACtB,MAAO,CACLE,cAAeF,EAAME,cACrBM,MAAOR,EAAMmB,UAAUnB,EAAME,mBAIN,SAAAkB,GACzB,MAAO,CACLT,SAAU,SAACI,EAASC,GAClBb,QAAQC,IAAIW,GAEZK,EAASN,EAAWC,EAASC,QAIRjB,CACzBE,GCAaoB,EAnBK,SAAAnC,GAKlB,OACE,6BACE,4BACEU,UAAU,eACVL,MARM,CACVE,QAAS,OACT6B,UAAW,QAOPC,SAAkC,OAAxBrC,EAAMgB,cAChBQ,QAAS,kBAAMxB,EAAMsC,SAAStC,EAAMgB,cAAehB,EAAMiC,aAExDjC,EAAMuC,YAAc,YAAc,cCN5BC,EAPK,SAACV,GACpB,MAAM,CACLC,KAAMpC,eACNmC,GAAIA,ICISW,EAPQ,SAACC,GACvB,MAAM,CACLX,KAAMnC,yBACN8C,OAAQA,ICwBKC,EAJc9B,aApBL,SAAAC,GACtB,MAAO,CACLE,cAAeF,EAAME,cACrBuB,YAAazB,EAAMX,gBAAgBW,EAAME,eACzCiB,UAAWnB,EAAMmB,cAIM,SAAAC,GACzB,MAAO,CACLI,SAAU,SAACR,EAAIG,GAEb,IADA,IAAIW,EAAQ,EACH1C,EAAI,EAAGA,EAAI+B,EAAUH,GAAI1B,OAAQF,IACxC0C,GAASX,EAAUH,GAAI5B,GAAGyB,MAE5BO,EAASM,EAAYV,IACrBI,EAASO,EAAeG,QAID/B,CAC3BsB,GCOaU,EA7BC,SAAA7C,GACd,IAQI4C,EAAQ,EACZ,GAA4B,OAAxB5C,EAAMgB,cACR,IAAK,IAAId,EAAI,EAAGA,EAAIF,EAAMsB,MAAMlB,OAAQF,IACtC0C,GAAS5C,EAAMsB,MAAMpB,GAAGyB,MAG5B,OACE,yBAAKtB,MAfK,CACVyC,MAAO,IACPC,OAAQ,IACRvC,gBAAiB,UACjBF,UAAW,SACX0C,WAAY,SAWV,wCAAchD,EAAMgB,eACpB,6BACA,kBAAC,EAAD,MACA,6BACA,2CAAiB4B,GAEjB,wCACA,kBAAC,EAAD,QChBSK,EAFUpC,aAPD,SAAAC,GACtB,MAAO,CACLE,cAAeF,EAAME,cACrBM,MAAOR,EAAMmB,UAAUnB,EAAME,kBAIiB,KAAzBH,CAA+BgC,GCYzCK,EApBK,SAAAlD,GAClB,IAAIK,EAAQ,CACVyC,MAAO,GACPC,OAAQ,GACRI,OAAQ,GACRC,OAAQpD,EAAMgB,gBAAkBhB,EAAM8B,GAAK,gBAAkB,KAC7DtB,gBAAiBR,EAAMG,gBAAgBH,EAAM8B,IAAM,MAAQ,KAC3DuB,UAAW,OACXC,QAAS,OACTlB,UAAW,QAEb,OACE,6BACE,4BAAQ1B,UAAU,eAAec,QAAS,kBAAMxB,EAAMuD,SAASvD,EAAM8B,KAAKzB,MAAOA,GAC9EL,EAAM8B,MCPA0B,EAPK,SAAC1B,GACpB,MAAM,CACLC,KAAMrC,eACNoC,GAAIA,ICiBS2B,EAJc5C,aAdL,SAAAC,GACtB,MAAO,CACLE,cAAeF,EAAME,cACrBb,gBAAiBW,EAAMX,oBAIA,SAAA+B,GACzB,MAAO,CACLqB,SAAU,SAAAzB,GACRI,EAASsB,EAAY1B,QAIEjB,CAC3BqC,GCmBaQ,EAnCA,WAWd,OACA,yBAAKrD,MAXO,CACXe,QAAS,OACTuC,aAAc,SACdC,eAAgB,SAChBC,SAAU,OACVf,MAAO,IACPC,OAAQ,IACRvC,gBAAiB,SAKb,kBAAC,EAAD,CAAsBsB,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAE1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAC1B,kBAAC,EAAD,CAAsBA,GAAI,IAE1B,kBAAC,EAAD,CAAsBA,GAAI,KAC1B,kBAAC,EAAD,CAAsBA,GAAI,KAC1B,kBAAC,EAAD,CAAsBA,GAAI,KAC1B,kBAAC,EAAD,CAAsBA,GAAI,KAC1B,kBAAC,EAAD,CAAsBA,GAAI,KAC1B,kBAAC,EAAD,CAAsBA,GAAI,OCLjBgC,EA1BK,SAAA9D,GAQlB,OACE,6BACE,4BACEqC,SAC0B,OAAxBrC,EAAMgB,gBACyC,IAA/ChB,EAAMG,gBAAgBH,EAAMgB,eAE9BQ,QAAS,kBACPxB,EAAM+D,MAAM/D,EAAM0B,KAAM1B,EAAM2B,MAAO3B,EAAMgB,gBAE7CX,MAjBM,CACVyC,MAAO,IACPC,OAAQ,GACRvC,gBAAiB,UACjB4B,UAAW,OACXkB,QAAS,SAIP,IAUItD,EAAM2B,MAVV,IAUkB3B,EAAM0B,QCTfsC,EAXC,SAACtC,EAAMC,EAAOG,GAC7B,MAAM,CACLC,KAAMlC,iBACNgC,QAASC,EACTmC,KAAM,CACLvC,KAAMA,EACNC,MAAOA,KCcKuC,EAJcrD,aAdL,SAAAC,GACtB,MAAO,CACLE,cAAeF,EAAME,cACrBb,gBAAiBW,EAAMX,oBAIA,SAAA+B,GACzB,MAAO,CACL6B,MAAO,SAACrC,EAAMC,EAAOE,GACnBK,EAAS8B,EAAQtC,EAAMC,EAAOE,QAIPhB,CAC3BiD,GCWaK,EA3BF,WASX,OACE,yBAAK9D,MATK,CACVe,QAAS,OACTyC,SAAU,OACVF,aAAc,eACdb,MAAO,IACPC,OAAQ,IACRvC,gBAAiB,SAIf,kBAAC,EAAD,CAAsBkB,KAAK,SAASC,MAAO,IAC3C,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,MAAMC,MAAO,IACxC,kBAAC,EAAD,CAAsBD,KAAK,OAAOC,MAAO,IACzC,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,OAAOC,MAAO,IACzC,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,QAAQC,MAAO,IAC1C,kBAAC,EAAD,CAAsBD,KAAK,OAAOC,MAAO,MCJhCyC,EAhBF,WAMZ,OACC,yBAAK/D,MANO,CACXe,QAAS,OACTiD,KAAM,GAIYC,MAAM,sCACxB,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHYC,MATf,WACE,OACE,yBAAK7D,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCIc8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPN,IAFA,IAAIC,EAAmB,GAEd3E,EAAI,EAAGA,EAAI,GAAIA,IACtB2E,EAAiBC,KAAK,IAGxB,IAAIC,EAAyB,IAAIC,MAAM,IAAIC,MAAK,GAoEjCC,EAPCC,YAAgB,CAC9BxE,YA/BkB,WAAwB,IAAvBG,EAAsB,uDAAd,EAAGsE,EAAW,uCACzC,OAAQA,EAAOrD,MACb,KAAKnC,yBACH,OAAOkB,EAAQsE,EAAO1C,OACxB,QACE,OAAO5B,IA2BXE,cAvBoB,WAA2B,IAA1BF,EAAyB,uDAAjB,KAAMsE,EAAW,uCAC9C,OAAQA,EAAOrD,MACb,KAAKrC,eACH,OAAIoB,IAAUsE,EAAOtD,GAAW,KACpBsD,EAAOtD,GACrB,QACE,OAAOhB,IAkBXX,gBAdsB,WAA6C,IAA5CW,EAA2C,uDAAnCiE,EAAwBK,EAAW,uCAClE,OAAQA,EAAOrD,MACb,KAAKpC,eACH,IAAI0F,EAAYvE,EAAMwE,QAEtB,OADAD,EAAUD,EAAOtD,KAAOuD,EAAUD,EAAOtD,IAClCuD,EACT,QACE,OAAOvE,IAQXmB,UA/DgB,WAAuC,IAAtCnB,EAAqC,uDAA7B+D,EAAkBO,EAAW,uCACtD,OAAQA,EAAOrD,MACb,KAAKlC,iBAEH,IADA,IAAIwF,EAAY,GACPnF,EAAI,EAAGA,EAAI,GAAIA,IACtBmF,EAAUP,KAAKhE,EAAMZ,GAAGoF,SAG1B,OADAD,EAAUD,EAAOvD,SAASiD,KAAKM,EAAOnB,MAC/BoB,EACT,KAAKvF,oBACCuF,EAAY,GAChB,IADA,IACSnF,EAAI,EAAGA,EAAI,GAAIA,IACtBmF,EAAUP,KAAKhE,EAAMZ,GAAGoF,SAI1B,OAFArE,QAAQC,IAAIkE,GACZC,EAAUD,EAAOvD,SAAS0D,OAAOH,EAAOtD,GAAI,GACrCuD,EACT,KAAK1F,eACC0F,EAAY,GAChB,IADA,IACSnF,EAAI,EAAGA,EAAI,GAAIA,IACtBmF,EAAUP,KAAKhE,EAAMZ,GAAGoF,SAG1B,OADAD,EAAUD,EAAOtD,IAAM,GAChBuD,EACT,QACE,OAAOvE,MCjCT0E,EAAQC,YAAYP,GAExBQ,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpF,QAAQoF,MAAMA,EAAMC,c","file":"static/js/main.b1c1eb8a.chunk.js","sourcesContent":["const SELECT_TABLE = 'SELECT_TABLE';\r\nconst TOGGLE_TABLE = 'TOGGLE_TABLE';\r\nconst INCREMENT_MONEY_EARNED = 'INCREMENT_MONEY_EARNED';\r\nconst ADD_TABLE_ITEM = 'ADD_TABLE_ITEM';\r\nconst DELETE_TABLE_ITEM = 'DELETE_TABLE_ITEM';\r\n\r\n\r\nmodule.exports = {\r\n\tSELECT_TABLE,\r\n\tTOGGLE_TABLE,\r\n\tINCREMENT_MONEY_EARNED,\r\n\tADD_TABLE_ITEM,\r\n\tDELETE_TABLE_ITEM\r\n}","import React from 'react';\r\n\r\nconst Overview = (props) => {\r\nvar style = {\r\n\ttextAlign: \"center\",\r\n\tpadding: \"15px\",\r\n\tbackgroundColor: \"#000\",\r\n\tcolor: \"#fff\"\r\n}\r\n\tvar numTables = 0;\r\n  \tfor (let i = 0; i < props.tableStatusData.length; i++) {\r\n    \tnumTables += props.tableStatusData[i];\r\n  \t}\r\n\treturn(\r\n\t\t<div style={style} className=\"rounded text-center border-bottom border-info\">\r\n\t\t\t<p className=\"display-4\">Cafe Triplets</p>\r\n\t\t\t<p className=\"h4 text-center\">Tables filled: {numTables} / 16</p>\r\n\t\t\t<p className=\"h4 text-center\">Money earned: {props.moneyEarned}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Overview;","import { connect } from \"react-redux\";\r\nimport Overview from \"../components/Overview.jsx\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moneyEarned: state.moneyEarned,\r\n    tableStatusData: state.tableStatusData\r\n  };\r\n};\r\n\r\nconst OverviewContainer = connect(mapStateToProps, null)(Overview);\r\n\r\nexport default OverviewContainer;\r\n","import React from \"react\";\r\n\r\nconst OrderList = props => {\r\n  var style = {\r\n    textAlign: \"left\",\r\n    marginLeft: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  };\r\n\r\n  if (props.selectedTable === null) return null;\r\n  console.log(props);\r\n  return (\r\n    <div style={style}>\r\n      {props.items.map((items, i) => {\r\n        return (\r\n          <div>\r\n            <button className=\"btn btn-dark\" onClick={() => props.onDelete(props.selectedTable, i)}>\r\n              x\r\n            </button>\r\n            &nbsp; {items.name} | ${items.price}\r\n            <br/>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import { DELETE_TABLE_ITEM } from '../constants/constants.js';\r\n\r\nconst deleteItem = (tableId, id) => {\r\n\treturn{\r\n\t\ttype: DELETE_TABLE_ITEM,\r\n\t\ttableId: tableId,\r\n\t\tid: id\r\n\t}\r\n}\r\n\r\nexport default deleteItem;","import { connect } from \"react-redux\";\r\nimport OrderList from \"../components/OrderList.jsx\";\r\nimport deleteItem from \"../actions/deleteItem.js\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTable: state.selectedTable,\r\n    items: state.tableData[state.selectedTable]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: (tableId, id) => {\r\n      console.log(tableId);\r\n\r\n      dispatch(deleteItem(tableId, id));\r\n    }\r\n  };\r\n};\r\nconst OrderListContainer = connect(mapStateToProps, mapDispatchToProps)(\r\n  OrderList\r\n);\r\n\r\nexport default OrderListContainer;\r\n","import React from \"react\";\r\n\r\nconst ToggleTable = props => {\r\n  var style = {\r\n    padding: \"10px\",\r\n    boxShadow: \"none\"\r\n  }\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn btn-dark\"\r\n        style={style} \r\n        disabled={props.selectedTable === null}\r\n        onClick={() => props.onToggle(props.selectedTable, props.tableData)}\r\n      >\r\n        {props.tableStatus ? \"Check Out\" : \"Check In\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleTable;\r\n","import { TOGGLE_TABLE } from '../constants/constants.js';\r\n\r\nconst toggleTable = (id) => {\r\n\treturn{\r\n\t\ttype: TOGGLE_TABLE,\r\n\t\tid: id\r\n\t}\r\n}\r\n\r\nexport default toggleTable;","import { INCREMENT_MONEY_EARNED } from '../constants/constants.js';\r\n\r\nconst incrementMoney = (amount) => {\r\n\treturn{\r\n\t\ttype: INCREMENT_MONEY_EARNED,\r\n\t\tamount: amount\r\n\t}\r\n}\r\n\r\nexport default incrementMoney;","import { connect } from \"react-redux\";\r\nimport ToggleTable from \"../components/ToggleTable.jsx\";\r\nimport toggleTable from \"../actions/toggleTable.js\";\r\nimport incrementMoney from \"../actions/incrementMoney.js\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTable: state.selectedTable,\r\n    tableStatus: state.tableStatusData[state.selectedTable],\r\n    tableData: state.tableData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onToggle: (id, tableData) => {\r\n      var total = 0;\r\n      for (let i = 0; i < tableData[id].length; i++) {\r\n        total += tableData[id][i].price;\r\n      }\r\n      dispatch(toggleTable(id));\r\n      dispatch(incrementMoney(total));\r\n    }\r\n  };\r\n};\r\nconst ToggleTableContainer = connect(mapStateToProps, mapDispatchToProps)(\r\n  ToggleTable\r\n);\r\n\r\nexport default ToggleTableContainer;\r\n","import React from \"react\";\r\nimport OrderListContainer from \"../containers/OrderListContainer.js\";\r\nimport ToggleTableContainer from \"../containers/ToggleTableContainer.js\";\r\n\r\nconst Details = props => {\r\n  var style = {\r\n    width: 190,\r\n    height: 480,\r\n    backgroundColor: \"#cde9d0\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"20px\"\r\n  };\r\n\r\n  var total = 0;\r\n  if (props.selectedTable !== null) {\r\n    for (let i = 0; i < props.items.length; i++) {\r\n      total += props.items[i].price;\r\n    }\r\n  }\r\n  return (\r\n    <div style={style}>\r\n      <h2>Table #: {props.selectedTable}</h2>\r\n      <br/>\r\n      <ToggleTableContainer />\r\n      <br/>\r\n      <h2>Bill Total: {total}</h2>\r\n\r\n      <h2>Orders: </h2>\r\n      <OrderListContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { connect } from \"react-redux\";\r\nimport Details from \"../components/Details.jsx\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTable: state.selectedTable,\r\n    items: state.tableData[state.selectedTable]\r\n  };\r\n};\r\n\r\nconst DetailsContainer = connect(mapStateToProps, null)(Details);\r\n\r\nexport default DetailsContainer;\r\n","import React from \"react\";\r\n\r\nconst TableButton = props => {\r\n  var style = {\r\n    width: 80,\r\n    height: 80,\r\n    margin: 25,\r\n    border: props.selectedTable === props.id ? \"3px solid red\" : null,\r\n    backgroundColor: props.tableStatusData[props.id] ? \"red\" : null,\r\n    marginTop: \"10px\",\r\n    outline: \"none\",\r\n    boxShadow: \"none\"\r\n  };\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-info\" onClick={() => props.onSelect(props.id)} style={style}>\r\n        {props.id}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableButton;\r\n","import { SELECT_TABLE } from '../constants/constants.js';\r\n\r\nconst selectTable = (id) => {\r\n\treturn{\r\n\t\ttype: SELECT_TABLE,\r\n\t\tid: id\r\n\t}\r\n}\r\n\r\nexport default selectTable;","import { connect } from \"react-redux\";\r\nimport TableButton from \"../components/TableButton.jsx\";\r\nimport selectTable from \"../actions/selectTable.js\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTable: state.selectedTable,\r\n    tableStatusData: state.tableStatusData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelect: id => {\r\n      dispatch(selectTable(id));\r\n    }\r\n  };\r\n};\r\nconst TableButtonContainer = connect(mapStateToProps, mapDispatchToProps)(\r\n  TableButton\r\n);\r\n\r\nexport default TableButtonContainer;\r\n","import React from 'react';\r\nimport TableButtonContainer from '../containers/TableButtonContainer.js';\r\n\r\nconst Layout = () => {\r\n\tvar style = {\r\n\t\tdisplay: \"flex\",\r\n\t\talignContent: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\twidth: 640,\r\n\t\theight: 480,\r\n\t\tbackgroundColor: \"#000\"\r\n\t};\r\n\r\n\treturn(\r\n\t<div style={style}>\r\n      <TableButtonContainer id={0} />\r\n      <TableButtonContainer id={1} />\r\n      <TableButtonContainer id={2} />\r\n      <TableButtonContainer id={3} />\r\n      <TableButtonContainer id={4} />\r\n      <TableButtonContainer id={5} />\r\n\r\n      <TableButtonContainer id={6} />\r\n      <TableButtonContainer id={7} />\r\n      <TableButtonContainer id={8} />\r\n      <TableButtonContainer id={9} />\r\n\r\n      <TableButtonContainer id={10} />\r\n      <TableButtonContainer id={11} />\r\n      <TableButtonContainer id={12} />\r\n      <TableButtonContainer id={13} />\r\n      <TableButtonContainer id={14} />\r\n      <TableButtonContainer id={15} />\r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\n\r\nconst OrderButton = props => {\r\n  var style = {\r\n    width: 105,\r\n    height: 80,\r\n    backgroundColor: \"#cde9d0\",\r\n    boxShadow: \"none\",\r\n    outline: \"none\"\r\n  };\r\n  return (\r\n    <div>\r\n      <button\r\n        disabled={\r\n          props.selectedTable === null ||\r\n          props.tableStatusData[props.selectedTable] === false\r\n        }\r\n        onClick={() =>\r\n          props.onAdd(props.name, props.price, props.selectedTable)\r\n        }\r\n        style={style}\r\n      >\r\n        ${props.price} {props.name}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderButton;","import { ADD_TABLE_ITEM } from '../constants/constants.js';\r\n\r\nconst addItem = (name, price, id) => {\r\n\treturn{\r\n\t\ttype: ADD_TABLE_ITEM,\r\n\t\ttableId: id,\r\n\t\titem: {\r\n\t\t\tname: name,\r\n\t\t\tprice: price\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default addItem;","import { connect } from \"react-redux\";\r\nimport OrderButton from \"../components/OrderButton.jsx\";\r\nimport addItem from \"../actions/addItem.js\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedTable: state.selectedTable,\r\n    tableStatusData: state.tableStatusData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: (name, price, tableId) => {\r\n      dispatch(addItem(name, price, tableId));\r\n    }\r\n  };\r\n};\r\nconst OrderButtonContainer = connect(mapStateToProps, mapDispatchToProps)(\r\n  OrderButton\r\n);\r\n\r\nexport default OrderButtonContainer;\r\n","import React from \"react\";\r\nimport OrderButtonContainer from \"../containers/OrderButtonContainer.js\";\r\n\r\nconst Menu = () => {\r\n  var style = {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"space-around\",\r\n    width: 210,\r\n    height: 480,\r\n    backgroundColor: \"#000\"\r\n  };\r\n  return (\r\n    <div style={style}>\r\n      <OrderButtonContainer name=\"Burger\" price={5} />\r\n      <OrderButtonContainer name=\"Pizza\" price={3} />\r\n      <OrderButtonContainer name=\"Fries\" price={1} />\r\n      <OrderButtonContainer name=\"Water\" price={0} />\r\n      <OrderButtonContainer name=\"Donut\" price={1} />\r\n      <OrderButtonContainer name=\"Tea\" price={1} />\r\n      <OrderButtonContainer name=\"Pork\" price={4} />\r\n      <OrderButtonContainer name=\"Steak\" price={7} />\r\n      <OrderButtonContainer name=\"Milk\" price={2} />\r\n      <OrderButtonContainer name=\"Salad\" price={3} />\r\n      <OrderButtonContainer name=\"Fruit\" price={2} />\r\n      <OrderButtonContainer name=\"Eggs\" price={1} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport DetailsContainer from '../containers/DetailsContainer.js';\r\nimport Layout from './Layout.jsx';\r\nimport Menu from './Menu.jsx';\r\n\r\nconst Body = () => {\r\n\t\tvar style = {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflex: 1\r\n\t\t}\r\n\r\n\treturn(\r\n\t\t<div style={style} class=\"container justify-content-center\t\">\r\n\t\t\t<DetailsContainer />\r\n\t\t\t<br/>\r\n\t\t\t<Layout />\r\n\t\t\t<Menu />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport OverviewContainer from './containers/OverviewContainer.js';\nimport Body from './components/Body.jsx';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <OverviewContainer />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_TABLE_ITEM,\r\n  TOGGLE_TABLE,\r\n  DELETE_TABLE_ITEM,\r\n  INCREMENT_MONEY_EARNED,\r\n  SELECT_TABLE\r\n} from \"../constants/constants.js\";\r\n\r\nvar initialTableData = [];\r\n\r\nfor (let i = 0; i < 16; i++) {\r\n  initialTableData.push([]);\r\n}\r\n\r\nvar initialTableStatusData = new Array(16).fill(false);\r\n\r\nconst tableData = (state = initialTableData, action) => {\r\n  switch (action.type) {\r\n    case ADD_TABLE_ITEM:\r\n      var stateCopy = [];\r\n      for (let i = 0; i < 16; i++) {\r\n        stateCopy.push(state[i].slice());\r\n      }\r\n      stateCopy[action.tableId].push(action.item);\r\n      return stateCopy;\r\n    case DELETE_TABLE_ITEM:\r\n      var stateCopy = [];\r\n      for (let i = 0; i < 16; i++) {\r\n        stateCopy.push(state[i].slice());\r\n      }\r\n      console.log(action);\r\n      stateCopy[action.tableId].splice(action.id, 1);\r\n      return stateCopy;\r\n    case TOGGLE_TABLE:\r\n      var stateCopy = [];\r\n      for (let i = 0; i < 16; i++) {\r\n        stateCopy.push(state[i].slice());\r\n      }\r\n      stateCopy[action.id] = [];\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst moneyEarned = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_MONEY_EARNED:\r\n      return state + action.amount;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst selectedTable = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SELECT_TABLE:\r\n      if (state === action.id) return null;\r\n      else return action.id;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst tableStatusData = (state = initialTableStatusData, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_TABLE:\r\n      var stateCopy = state.slice();\r\n      stateCopy[action.id] = !stateCopy[action.id];\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  moneyEarned,\r\n  selectedTable,\r\n  tableStatusData,\r\n  tableData\r\n});\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers/reducer.js';\n\nvar store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}